#!/usr/bin/perl
#
# Tests the Lycon controllers
#
# ---   *   ---   *   ---

package not_main;

  use v5.36.0;
  use strict;
  use warnings;

  use lib $ENV{'ARPATH'}.'/lib/sys/';
  use lib $ENV{'ARPATH'}.'/lib/';

  use Style;
  use Arstd;

  use Lycon;

  use Lycon::Clk;
  use Lycon::Ctl;
  use Lycon::Kbd;
  use Lycon::Loop;

# ---   *   ---   *   ---

my $Exit_Not_Main=0;

Lycon::Ctl::register_events(

  -JUMP=>[sub {$Exit_Not_Main=1},0,0],

);

my $Q=Lycon::Ctl::get_module_queue();

$Q->add(sub {print "switched to not_main\r\n"});

sub loop_test() {
  print "inside not_main\r\n";
  $Q->add(\&loop_test) if !$Exit_Not_Main;

};

$Q->add(\&loop_test);

sub ctl_take() {

  Lycon::Loop::transfer();

};


# ---   *   ---   *   ---

# deps
package main;
  use v5.36.0;
  use strict;
  use warnings;

  use lib $ENV{'ARPATH'}.'/lib/sys/';
  use lib $ENV{'ARPATH'}.'/lib/';

  use Style;
  use Arstd;

  use Lycon;

  use Lycon::Clk;
  use Lycon::Ctl;
  use Lycon::Kbd;
  use Lycon::Loop;

# ---   *   ---   *   ---

my $Cache={

  terminate=>0,
  init=>0,

};

# ---   *   ---   *   ---

Lycon::Ctl::register_events(

  -EXIT=>[0,0,sub {$Cache->{terminate}=1}],

);

Lycon::Kbd::nit();
Lycon::Loop::set_quit(sub {

  return $Cache->{terminate};

});

Lycon::Clk::nit();

Lycon::Loop::set_logic(sub {

  if(!$Cache->{init}) {

    $Cache->{init}=1;
    not_main::ctl_take();

  };

},[]);

Lycon::Kbd::swap_to();
Lycon::Loop::run();

# ---   *   ---   *   ---
1; # ret
