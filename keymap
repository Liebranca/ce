#!/usr/bin/perl
# ---   *   ---   *   ---
# KEYMAP
# generates tables for
# key lookups, and such

# LIBRE SOFTWARE
# Licensed under GNU GPL3
# be a bro and inherit

# CONTRIBUTORS
# lyeb,
# ---   *   ---   *   ---
# deps

  use v5.36.0;
  use strict;
  use warnings;

  use lib $ENV{'ARPATH'}.'/lib/';

  use arstd;

  use emit::std;
  use emit::c;

  use lib $ENV{'ARPATH'}.'/ce/';
  use genks;

# ---   *   ---   *   ---
# info

  our $VERSION=v0.00.2;
  our $AUTHOR='IBN-3DILA';

# ---   *   ---   *   ---
# base table

  # 'key_name'=>[keycode_name,onTap,onHel,onRel]

  genks::process_keymap(

    # keychars file
    'ce/keys/ti',

    # quick exit for testing
    'ESC' ,['escape','','','dpycl();exit(0);'],

    # modifiers
    'LALT',['LAlt','','',''],
    'RALT',['RAlt','','',''],
    'LSHIFT',['LShift','','',''],

    # movement keys
    'AUP' ,['up','ce/keys/up.k'],
    'ADWN',['down','ce/keys/down.k'],
    'ARGT',['right','ce/keys/right.k'],
    'ALFT',['left','ce/keys/left.k'],
    'ERET',["ret",'ce/keys/ret.k'],

  );

# ---   *   ---   *   ---

emit::std::outf(

  'ce/keymap.h',
  \&emit::c::codewrap,

  body=>\&genks::keymap_generator,
  add_guards=>1,

);

# ---   *   ---   *   ---

emit::std::outf(

  'ce/keycalls.h',
  \&emit::c::codewrap,

  body=>\&genks::keycalls_generator,
  add_guards=>1,

);

# ---   *   ---   *   ---
1; # ret
